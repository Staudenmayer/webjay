import "@/styles/globals.css";

import { GeistSans } from "geist/font/sans";
import { type Metadata } from "next";
import { ThemeProvider } from "next-themes";

import { TRPCReactProvider } from "@/trpc/react";
import AppLayout from "@/components/layout/app-layout";
import { Toaster } from "@/components/ui/toaster";
import { getServerAuthSession } from "@/server/auth";

export const metadata: Metadata = {
  title: "Webjay",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.svg" }],
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const session = await getServerAuthSession();
  return (
    <html lang="en" className={`${GeistSans.variable}`}>
      <body>
        <TRPCReactProvider>
            <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
              <Toaster />
              <AppLayout session={session}>
                {children}
              </AppLayout>
            </ThemeProvider>
        </TRPCReactProvider>
      </body>
    </html>
  );
}
